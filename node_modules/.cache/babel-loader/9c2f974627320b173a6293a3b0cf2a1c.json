{"ast":null,"code":"var _jsxFileName = \"/home/kapilraj-kc/Desktop/Gofood/mernapp/src/screens/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Card from '../components/Card';\nimport Footer from '../components/Footer';\nimport Navbar from '../components/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const [foodCat, setFoodCat] = useState([]);\n  const [foodItems, setFoodItems] = useState([]);\n  const [search, setSearch] = useState('');\n\n  const loadFoodItems = async () => {\n    try {\n      let response = await fetch(\"http://localhost:5000/api/auth/foodData\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      let data = await response.json();\n      setFoodItems(data[0]);\n      setFoodCat(data[1]);\n    } catch (error) {\n      console.error(\"Error fetching food data:\", error);\n    }\n  };\n\n  useEffect(() => {\n    loadFoodItems();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: foodCat.length !== 0 ? foodCat.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fs-3 m-3\",\n          children: data.CategoryName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          style: {\n            height: \"4px\",\n            backgroundImage: \"-webkit-linear-gradient(left,rgb(0, 255, 137),rgb(0, 0, 0))\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), foodItems.length !== 0 ? foodItems.filter(items => items.CategoryName === data.CategoryName && items.name.toLowerCase().includes(search.toLowerCase())).map(filterItems => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-6 col-lg-3\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            foodName: filterItems.name,\n            item: filterItems,\n            options: filterItems.options ? filterItems.options[0] : [],\n            ImgSrc: filterItems.img,\n            description: filterItems.description || \"No description available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)\n        }, filterItems.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"No Such Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 22\n        }, this)]\n      }, data.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No Categories Available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"iaZoUtKdHRC/1y0fSKe60pEqrf8=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/kapilraj-kc/Desktop/Gofood/mernapp/src/screens/Home.js"],"names":["React","useEffect","useState","Card","Footer","Navbar","Home","foodCat","setFoodCat","foodItems","setFoodItems","search","setSearch","loadFoodItems","response","fetch","method","headers","data","json","error","console","length","map","CategoryName","height","backgroundImage","filter","items","name","toLowerCase","includes","filterItems","options","img","description","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Card from '../components/Card';\nimport Footer from '../components/Footer';\nimport Navbar from '../components/Navbar';\n\nexport default function Home() {\n  const [foodCat, setFoodCat] = useState([]);\n  const [foodItems, setFoodItems] = useState([]);\n  const [search, setSearch] = useState('');\n\n  const loadFoodItems = async () => {\n    try {\n      let response = await fetch(\"http://localhost:5000/api/auth/foodData\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      let data = await response.json();\n      setFoodItems(data[0]);\n      setFoodCat(data[1]);\n    } catch (error) {\n      console.error(\"Error fetching food data:\", error);\n    }\n  };\n\n  useEffect(() => {\n    loadFoodItems();\n  }, []);\n\n  return (\n    <div>\n      <Navbar />\n      <div className='container'>\n        {\n          foodCat.length !== 0 ? foodCat.map((data) => (\n            <div className='row mb-3' key={data.id}>\n              <div className='fs-3 m-3'>{data.CategoryName}</div>\n              <hr style={{ height: \"4px\", backgroundImage: \"-webkit-linear-gradient(left,rgb(0, 255, 137),rgb(0, 0, 0))\" }} />\n              {\n                foodItems.length !== 0 ? foodItems.filter(\n                  (items) => (items.CategoryName === data.CategoryName) && (items.name.toLowerCase().includes(search.toLowerCase()))\n                ).map(filterItems => (\n                  <div key={filterItems.id} className='col-12 col-md-6 col-lg-3'>\n                    <Card \n                      foodName={filterItems.name} \n                      item={filterItems} \n                      options={filterItems.options ? filterItems.options[0] : []} \n                      ImgSrc={filterItems.img} \n                      description={filterItems.description || \"No description available\"} \n                    />\n                  </div>\n                )) : <div>No Such Data</div>\n              }\n            </div>\n          )) : <div>No Categories Available</div>\n        }\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}