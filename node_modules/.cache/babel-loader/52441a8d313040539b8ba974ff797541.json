{"ast":null,"code":"var _jsxFileName = \"/home/kapilraj-kc/Desktop/Gofood/mernapp/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatchCart, useCart } from './ContextReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Card(props) {\n  _s();\n\n  let data = useCart();\n  let navigate = useNavigate();\n  const [qty, setQty] = useState(1);\n  const [size, setSize] = useState('');\n  const priceRef = useRef();\n  let options = props.options;\n  let priceOptions = Object.keys(options);\n  let foodItem = props.item;\n  const dispatch = useDispatchCart();\n\n  const handleClick = () => {\n    if (!localStorage.getItem('token')) {\n      navigate('/login');\n    }\n  };\n\n  const handleQty = e => {\n    setQty(e.target.value);\n  };\n\n  const handleOptions = e => {\n    setSize(e.target.value);\n  };\n\n  const handleAddToCart = async () => {\n    let food = data.find(item => item.id === foodItem._id);\n\n    if (food) {\n      if (food.size === size) {\n        await dispatch({\n          type: 'UPDATE',\n          id: foodItem._id,\n          price: finalPrice,\n          qty: qty\n        });\n        return;\n      } else {\n        await dispatch({\n          type: 'ADD',\n          id: foodItem._id,\n          name: foodItem.name,\n          price: finalPrice,\n          qty: qty,\n          size: size,\n          img: props.ImgSrc\n        });\n        return;\n      }\n    }\n\n    await dispatch({\n      type: 'ADD',\n      id: foodItem._id,\n      name: foodItem.name,\n      price: finalPrice,\n      qty: qty,\n      size: size,\n      img: props.ImgSrc\n    });\n  };\n\n  useEffect(() => {\n    setSize(priceRef.current.value);\n  }, []);\n  let finalPrice = qty * parseInt(options[size]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mt-3\",\n    style: {\n      width: '16rem',\n      maxHeight: '400px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: props.ImgSrc,\n      className: \"card-img-top\",\n      alt: props.foodName,\n      style: {\n        height: '120px',\n        objectFit: 'cover'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: props.foodName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text text-muted\",\n        style: {\n          fontSize: '0.9rem',\n          minHeight: '40px'\n        },\n        children: props.description || 'No description available.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container w-100 p-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"m-2 bg-success text-black rounded\",\n          onClick: handleClick,\n          onChange: handleQty,\n          children: Array.from(Array(6), (e, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: i + 1,\n            children: i + 1\n          }, i + 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"m-2 bg-success text-black rounded\",\n          ref: priceRef,\n          onClick: handleClick,\n          onChange: handleOptions,\n          children: priceOptions.map(i => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: i,\n            children: i\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-inline ms-2 fs-5\",\n          children: [\"\\u0930\\u0941.\", finalPrice, \"/-\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: handleAddToCart,\n        children: \"Add to Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"FpAfuXYMYFG9y0y5W8Te4Z32t80=\", false, function () {\n  return [useCart, useNavigate, useDispatchCart];\n});\n\n_c = Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/kapilraj-kc/Desktop/Gofood/mernapp/src/components/Card.js"],"names":["React","useState","useRef","useEffect","useNavigate","useDispatchCart","useCart","Card","props","data","navigate","qty","setQty","size","setSize","priceRef","options","priceOptions","Object","keys","foodItem","item","dispatch","handleClick","localStorage","getItem","handleQty","e","target","value","handleOptions","handleAddToCart","food","find","id","_id","type","price","finalPrice","name","img","ImgSrc","current","parseInt","width","maxHeight","foodName","height","objectFit","fontSize","minHeight","description","Array","from","i","map"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatchCart, useCart } from './ContextReducer';\n\nexport default function Card(props) {\n  let data = useCart();\n  let navigate = useNavigate();\n  const [qty, setQty] = useState(1);\n  const [size, setSize] = useState('');\n  const priceRef = useRef();\n\n  let options = props.options;\n  let priceOptions = Object.keys(options);\n  let foodItem = props.item;\n  const dispatch = useDispatchCart();\n\n  const handleClick = () => {\n    if (!localStorage.getItem('token')) {\n      navigate('/login');\n    }\n  };\n\n  const handleQty = (e) => {\n    setQty(e.target.value);\n  };\n\n  const handleOptions = (e) => {\n    setSize(e.target.value);\n  };\n\n  const handleAddToCart = async () => {\n    let food = data.find((item) => item.id === foodItem._id);\n\n    if (food) {\n      if (food.size === size) {\n        await dispatch({ type: 'UPDATE', id: foodItem._id, price: finalPrice, qty: qty });\n        return;\n      } else {\n        await dispatch({\n          type: 'ADD',\n          id: foodItem._id,\n          name: foodItem.name,\n          price: finalPrice,\n          qty: qty,\n          size: size,\n          img: props.ImgSrc,\n        });\n        return;\n      }\n    }\n\n    await dispatch({\n      type: 'ADD',\n      id: foodItem._id,\n      name: foodItem.name,\n      price: finalPrice,\n      qty: qty,\n      size: size,\n      img: props.ImgSrc,\n    });\n  };\n\n  useEffect(() => {\n    setSize(priceRef.current.value);\n  }, []);\n\n  let finalPrice = qty * parseInt(options[size]);\n\n  return (\n    <div className=\"card mt-3\" style={{ width: '16rem', maxHeight: '400px' }}>\n      <img\n        src={props.ImgSrc}\n        className=\"card-img-top\"\n        alt={props.foodName}\n        style={{ height: '120px', objectFit: 'cover' }}\n      />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{props.foodName}</h5>\n        {/* ✅ Added Description */}\n        <p className=\"card-text text-muted\" style={{ fontSize: '0.9rem', minHeight: '40px' }}>\n          {props.description || 'No description available.'}\n        </p>\n        <div className=\"container w-100 p-0\">\n          <select className=\"m-2 bg-success text-black rounded\" onClick={handleClick} onChange={handleQty}>\n            {Array.from(Array(6), (e, i) => (\n              <option key={i + 1} value={i + 1}>\n                {i + 1}\n              </option>\n            ))}\n          </select>\n          <select className=\"m-2 bg-success text-black rounded\" ref={priceRef} onClick={handleClick} onChange={handleOptions}>\n            {priceOptions.map((i) => (\n              <option key={i} value={i}>\n                {i}\n              </option>\n            ))}\n          </select>\n          <div className=\"d-inline ms-2 fs-5\">रु.{finalPrice}/-</div>\n        </div>\n        <hr />\n        <button className=\"btn btn-success\" onClick={handleAddToCart}>\n          Add to Cart\n        </button>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}